// Generated by view binder compiler. Do not edit!
package com.tensorflow.codelabs.objectdetection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tensorflow.codelabs.objectdetection.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRecipeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText ingredientEditText;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView menuNameTextView;

  @NonNull
  public final RecyclerView recipeRecyclerView;

  @NonNull
  public final ScrollView scrollview;

  @NonNull
  public final ImageButton searchButton;

  private ActivityRecipeBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText ingredientEditText, @NonNull ConstraintLayout main,
      @NonNull TextView menuNameTextView, @NonNull RecyclerView recipeRecyclerView,
      @NonNull ScrollView scrollview, @NonNull ImageButton searchButton) {
    this.rootView = rootView;
    this.ingredientEditText = ingredientEditText;
    this.main = main;
    this.menuNameTextView = menuNameTextView;
    this.recipeRecyclerView = recipeRecyclerView;
    this.scrollview = scrollview;
    this.searchButton = searchButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRecipeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRecipeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_recipe, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRecipeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ingredientEditText;
      EditText ingredientEditText = ViewBindings.findChildViewById(rootView, id);
      if (ingredientEditText == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.menuNameTextView;
      TextView menuNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (menuNameTextView == null) {
        break missingId;
      }

      id = R.id.recipeRecyclerView;
      RecyclerView recipeRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recipeRecyclerView == null) {
        break missingId;
      }

      id = R.id.scrollview;
      ScrollView scrollview = ViewBindings.findChildViewById(rootView, id);
      if (scrollview == null) {
        break missingId;
      }

      id = R.id.searchButton;
      ImageButton searchButton = ViewBindings.findChildViewById(rootView, id);
      if (searchButton == null) {
        break missingId;
      }

      return new ActivityRecipeBinding((ConstraintLayout) rootView, ingredientEditText, main,
          menuNameTextView, recipeRecyclerView, scrollview, searchButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
