// Generated by view binder compiler. Do not edit!
package com.tensorflow.codelabs.objectdetection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tensorflow.codelabs.objectdetection.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogInputBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText editTextExpiryDate;

  @NonNull
  public final EditText editTextName;

  @NonNull
  public final RadioButton radioFrozen;

  @NonNull
  public final RadioGroup radioGroupStorage;

  @NonNull
  public final RadioButton radioRefrigerated;

  @NonNull
  public final Spinner spinnerType;

  @NonNull
  public final TextView textView17;

  @NonNull
  public final TextView textView18;

  @NonNull
  public final TextView textView19;

  @NonNull
  public final TextView textView20;

  @NonNull
  public final TextView textView9;

  @NonNull
  public final TextView textViewRegistrationDate;

  @NonNull
  public final View view6;

  private DialogInputBinding(@NonNull LinearLayout rootView, @NonNull EditText editTextExpiryDate,
      @NonNull EditText editTextName, @NonNull RadioButton radioFrozen,
      @NonNull RadioGroup radioGroupStorage, @NonNull RadioButton radioRefrigerated,
      @NonNull Spinner spinnerType, @NonNull TextView textView17, @NonNull TextView textView18,
      @NonNull TextView textView19, @NonNull TextView textView20, @NonNull TextView textView9,
      @NonNull TextView textViewRegistrationDate, @NonNull View view6) {
    this.rootView = rootView;
    this.editTextExpiryDate = editTextExpiryDate;
    this.editTextName = editTextName;
    this.radioFrozen = radioFrozen;
    this.radioGroupStorage = radioGroupStorage;
    this.radioRefrigerated = radioRefrigerated;
    this.spinnerType = spinnerType;
    this.textView17 = textView17;
    this.textView18 = textView18;
    this.textView19 = textView19;
    this.textView20 = textView20;
    this.textView9 = textView9;
    this.textViewRegistrationDate = textViewRegistrationDate;
    this.view6 = view6;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogInputBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogInputBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_input, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogInputBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editTextExpiryDate;
      EditText editTextExpiryDate = ViewBindings.findChildViewById(rootView, id);
      if (editTextExpiryDate == null) {
        break missingId;
      }

      id = R.id.editTextName;
      EditText editTextName = ViewBindings.findChildViewById(rootView, id);
      if (editTextName == null) {
        break missingId;
      }

      id = R.id.radioFrozen;
      RadioButton radioFrozen = ViewBindings.findChildViewById(rootView, id);
      if (radioFrozen == null) {
        break missingId;
      }

      id = R.id.radioGroupStorage;
      RadioGroup radioGroupStorage = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupStorage == null) {
        break missingId;
      }

      id = R.id.radioRefrigerated;
      RadioButton radioRefrigerated = ViewBindings.findChildViewById(rootView, id);
      if (radioRefrigerated == null) {
        break missingId;
      }

      id = R.id.spinnerType;
      Spinner spinnerType = ViewBindings.findChildViewById(rootView, id);
      if (spinnerType == null) {
        break missingId;
      }

      id = R.id.textView17;
      TextView textView17 = ViewBindings.findChildViewById(rootView, id);
      if (textView17 == null) {
        break missingId;
      }

      id = R.id.textView18;
      TextView textView18 = ViewBindings.findChildViewById(rootView, id);
      if (textView18 == null) {
        break missingId;
      }

      id = R.id.textView19;
      TextView textView19 = ViewBindings.findChildViewById(rootView, id);
      if (textView19 == null) {
        break missingId;
      }

      id = R.id.textView20;
      TextView textView20 = ViewBindings.findChildViewById(rootView, id);
      if (textView20 == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      id = R.id.textViewRegistrationDate;
      TextView textViewRegistrationDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewRegistrationDate == null) {
        break missingId;
      }

      id = R.id.view6;
      View view6 = ViewBindings.findChildViewById(rootView, id);
      if (view6 == null) {
        break missingId;
      }

      return new DialogInputBinding((LinearLayout) rootView, editTextExpiryDate, editTextName,
          radioFrozen, radioGroupStorage, radioRefrigerated, spinnerType, textView17, textView18,
          textView19, textView20, textView9, textViewRegistrationDate, view6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
