// Generated by view binder compiler. Do not edit!
package com.tensorflow.codelabs.objectdetection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tensorflow.codelabs.objectdetection.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewholderListRecipeBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView detailTxt;

  @NonNull
  public final ImageButton imageButton;

  @NonNull
  public final ImageView img;

  @NonNull
  public final TextView recipeNameTextView;

  @NonNull
  public final TextView textView6;

  private ViewholderListRecipeBinding(@NonNull CardView rootView, @NonNull TextView detailTxt,
      @NonNull ImageButton imageButton, @NonNull ImageView img,
      @NonNull TextView recipeNameTextView, @NonNull TextView textView6) {
    this.rootView = rootView;
    this.detailTxt = detailTxt;
    this.imageButton = imageButton;
    this.img = img;
    this.recipeNameTextView = recipeNameTextView;
    this.textView6 = textView6;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewholderListRecipeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewholderListRecipeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.viewholder_list_recipe, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewholderListRecipeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.detailTxt;
      TextView detailTxt = ViewBindings.findChildViewById(rootView, id);
      if (detailTxt == null) {
        break missingId;
      }

      id = R.id.imageButton;
      ImageButton imageButton = ViewBindings.findChildViewById(rootView, id);
      if (imageButton == null) {
        break missingId;
      }

      id = R.id.img;
      ImageView img = ViewBindings.findChildViewById(rootView, id);
      if (img == null) {
        break missingId;
      }

      id = R.id.recipeNameTextView;
      TextView recipeNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (recipeNameTextView == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      return new ViewholderListRecipeBinding((CardView) rootView, detailTxt, imageButton, img,
          recipeNameTextView, textView6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
