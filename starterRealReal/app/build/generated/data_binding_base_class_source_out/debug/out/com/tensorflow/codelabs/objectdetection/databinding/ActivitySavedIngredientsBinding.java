// Generated by view binder compiler. Do not edit!
package com.tensorflow.codelabs.objectdetection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ListView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tensorflow.codelabs.objectdetection.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySavedIngredientsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonRecipe;

  @NonNull
  public final Button buttonRecommendRecipes;

  @NonNull
  public final ListView listViewSavedIngredients;

  @NonNull
  public final Spinner spinnerCategory;

  @NonNull
  public final TextView tvSavedIngredientsTitle;

  private ActivitySavedIngredientsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonRecipe, @NonNull Button buttonRecommendRecipes,
      @NonNull ListView listViewSavedIngredients, @NonNull Spinner spinnerCategory,
      @NonNull TextView tvSavedIngredientsTitle) {
    this.rootView = rootView;
    this.buttonRecipe = buttonRecipe;
    this.buttonRecommendRecipes = buttonRecommendRecipes;
    this.listViewSavedIngredients = listViewSavedIngredients;
    this.spinnerCategory = spinnerCategory;
    this.tvSavedIngredientsTitle = tvSavedIngredientsTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySavedIngredientsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySavedIngredientsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_saved_ingredients, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySavedIngredientsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonRecipe;
      Button buttonRecipe = ViewBindings.findChildViewById(rootView, id);
      if (buttonRecipe == null) {
        break missingId;
      }

      id = R.id.buttonRecommendRecipes;
      Button buttonRecommendRecipes = ViewBindings.findChildViewById(rootView, id);
      if (buttonRecommendRecipes == null) {
        break missingId;
      }

      id = R.id.listViewSavedIngredients;
      ListView listViewSavedIngredients = ViewBindings.findChildViewById(rootView, id);
      if (listViewSavedIngredients == null) {
        break missingId;
      }

      id = R.id.spinnerCategory;
      Spinner spinnerCategory = ViewBindings.findChildViewById(rootView, id);
      if (spinnerCategory == null) {
        break missingId;
      }

      id = R.id.tvSavedIngredientsTitle;
      TextView tvSavedIngredientsTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvSavedIngredientsTitle == null) {
        break missingId;
      }

      return new ActivitySavedIngredientsBinding((ConstraintLayout) rootView, buttonRecipe,
          buttonRecommendRecipes, listViewSavedIngredients, spinnerCategory,
          tvSavedIngredientsTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
